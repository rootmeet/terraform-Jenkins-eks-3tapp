pipeline{
    agent any
    environment{
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRATE_ACCESS_KEY')
        AWS_DEFAULT_REGION = "us-west-2"
    }
    stages{
        stage('Clean Workspace'){
            steps {
                cleanWs()
            }
        }
        stage('CheckoutFromGIT'){
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/rootmeet/terraform-jenkins-eks-3tapp.git']])
            }
        }
        stage('Initializing Terraform'){
            steps {
                script {
                    dir('EKS'){
                        sh 'terraform init'
                    }
                }
            }
        }
        stage('Format Terraform Code'){
            steps {
                script {
                    dir('EKS'){
                        sh 'terraform fmt'
                    }
                }
            }
        }
        stage('Validate Terraform Code'){
            steps {
                script {
                    dir('EKS'){
                        sh 'terraform validate'
                    }
                }
            }
        }
        stage('Preview Infra using Terraform'){
            steps {
                script {
                    dir('EKS'){
                        sh 'terraform plan'
                    }
                    input(message: "Are you sure to proceed?", ok: "Proceed")
                }
            }
        }
        stage('Provision/Deprovision Infra using Terraform'){
            steps {
                script {
                    dir('EKS'){
                        sh 'terraform $action --auto-approve'
                    }
                }
            }
        }
        stage('Deploy Mongo database'){
            steps {
                script {
                    dir('app/mongo'){
                        sh 'aws eks update-kubeconfig --name my-eks-cluster'
                        sh 'kubectl create namespace workshop'                        
                        sh 'kubectl apply -f deploy.yaml'                        
                        sh 'kubectl apply -f secrets.yaml'                   
                        sh 'kubectl apply -f service.yaml'
                    }
                }
            }
        }
    }
}